{"ast":null,"code":"import { jwtDecode } from 'jwt-decode';\nconst checkTokenValidity = webToken => {\n  try {\n    const decodedWT = jwtDecode(webToken);\n    const currentTime = Date.now() / 1000;\n    return decodedWT.exp > currentTime;\n  } catch (error) {\n    return false;\n  }\n};\nexport const isWebTokenValid = () => {\n  const token = JSON.parse(localStorage.getItem('webToken'));\n  return checkTokenValidity(token);\n};","map":{"version":3,"names":["jwtDecode","checkTokenValidity","webToken","decodedWT","currentTime","Date","now","exp","error","isWebTokenValid","token","JSON","parse","localStorage","getItem"],"sources":["D:/E-commerce react/urban-attire/frontend/src/webTokenVerification.js"],"sourcesContent":["import {jwtDecode} from 'jwt-decode';\r\n\r\nconst checkTokenValidity = (webToken) => {\r\n    try {\r\n        const decodedWT = jwtDecode(webToken);\r\n        const currentTime = Date.now() / 1000;\r\n        return decodedWT.exp > currentTime;\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const isWebTokenValid = () => {\r\n    const token = JSON.parse(localStorage.getItem('webToken'));\r\n    return checkTokenValidity(token)\r\n}"],"mappings":"AAAA,SAAQA,SAAS,QAAO,YAAY;AAEpC,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;EACrC,IAAI;IACA,MAAMC,SAAS,GAAGH,SAAS,CAACE,QAAQ,CAAC;IACrC,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IACrC,OAAOH,SAAS,CAACI,GAAG,GAAGH,WAAW;EACtC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ,OAAO,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACjC,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;EAC1D,OAAOb,kBAAkB,CAACS,KAAK,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}